<Window x:Class="SysadminsLV.Asn1Editor.Views.Windows.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="clr-namespace:SysadminsLV.Asn1Editor.API.ViewModel"
        xmlns:uc="clr-namespace:SysadminsLV.Asn1Editor.Views.UserControls"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:clr="clr-namespace:SysadminsLV.Asn1Editor.API.Utils"
        xmlns:system="clr-namespace:System;assembly=mscorlib"
        xmlns:wpfControls="clr-namespace:SysadminsLV.WPF.OfficeTheme.Controls;assembly=Wpf.OfficeTheme"
        xmlns:c="clr-namespace:SysadminsLV.Asn1Editor.Controls;assembly=SysadminsLV.Asn1Editor.Controls"
        xmlns:converters="clr-namespace:SysadminsLV.Asn1Editor.Controls.Converters;assembly=SysadminsLV.Asn1Editor.Controls"
        mc:Ignorable="d"
        d:DataContext="{d:DesignInstance vm:MainWindowVM}"
        Title="ASN.1 Editor"
        Icon="/Views/Images/asnlogo.ico"
        WindowStartupLocation="CenterScreen"
        Height="600"
        Width="800">
    <Window.InputBindings>
        <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding NewCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="S" Command="{Binding SaveCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="O" Command="{Binding OpenCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="P" Command="{Binding PrintCommand}"/>
        <KeyBinding Modifiers="Ctrl" Key="F4" Command="{Binding CloseTabCommand}"/>
        <KeyBinding Modifiers="Control+Shift" Key="S" Command="{Binding SaveCommand}" CommandParameter="2"/>
    </Window.InputBindings>
    <Window.Resources>
        <converters:MoveTabHeaderConverter x:Key="MoveTabHeaderConverter"/>
        <DataTemplate x:Key="AsnTabHeaderTemplate">
            <TextBlock Text="{Binding Header}"
                       ToolTip="{Binding ToolTipText}">
                <TextBlock.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="_Save"
                                  Command="{Binding DataContext.MainWindowVM.SaveCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  InputGestureText="Ctrl + S">
                            <MenuItem.Icon>
                                <Image Source="/Views/Images/Menu/save_16x16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="_Close"
                                  Command="{Binding DataContext.MainWindowVM.CloseTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  InputGestureText="Ctrl + F4">
                            <MenuItem.Icon>
                                <Image Source="/Views/Images/Menu/cancel_16x16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Close _All"
                                  Command="{Binding DataContext.MainWindowVM.CloseAllTabsCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Source="/Views/Images/Menu/cancel_16x16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <MenuItem Header="Close All _But This"
                                  Command="{Binding DataContext.MainWindowVM.CloseAllButThisTabCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Source="/Views/Images/Menu/cancel_16x16.png"/>
                            </MenuItem.Icon>
                        </MenuItem>
                        <Separator/>
                        <MenuItem Header="{Binding ActivePanel, Converter={StaticResource MoveTabHeaderConverter}}"
                                  Command="{Binding MoveTabCommand}"
                                  CommandParameter="{Binding}">
                            <MenuItem.Icon>
                                <Image Width="16">
                                    <Image.Style>
                                        <Style TargetType="Image">
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ActivePanel}" Value="Left">
                                                    <Setter Property="Source" Value="/Views/Images/Menu/right-arrow_16x16.png"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActivePanel}" Value="Right">
                                                    <Setter Property="Source" Value="/Views/Images/Menu/left-arrow_16x16.png"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Image.Style>
                                </Image>
                            </MenuItem.Icon>
                        </MenuItem>
                    </ContextMenu>
                </TextBlock.ContextMenu>
            </TextBlock>
        </DataTemplate>
        <DataTemplate x:Key="AsnTabContentTemplate">
            <DockPanel>
                <DockPanel Visibility="{Binding ElementName=HexViewerToggle, Path=IsChecked, Converter={StaticResource BooleanToVisibility}}">
                    <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
                        <ToolBar>
                            <ToggleButton x:Name="HexAddressToggle"
                              IsChecked="{Binding NodeViewOptions.ShowHexAddrPanel}"
                              ToolTip="Show or hide address panel">
                                <Image Source="/Views/Images/Menu/AddressEnabled_32x32.png"/>
                            </ToggleButton>
                            <Separator/>
                            <ToggleButton x:Name="AsciiToggle"
                              IsChecked="{Binding NodeViewOptions.ShowHexAsciiPanel}"
                              ToolTip="Show or hide ASCII panel">
                                <Image Source="/Views/Images/Menu/AsciiEnabled_32x32.png"/>
                            </ToggleButton>
                            <Separator/>
                            <ToggleButton x:Name="HexColorToggle"
                              IsChecked="{Binding NodeViewOptions.HexViewerColoringEnabled}"
                              ToolTip="Enable or disable hex coloring">
                                <Image Source="/Views/Images/Menu/textcolor_32x32.png"/>
                            </ToggleButton>
                        </ToolBar>
                    </ToolBarTray>
                    <c:AsnHexViewer DataSource="{Binding DataSource.RawData, Mode=OneWay}"
                        SelectedNode="{Binding DataSource.SelectedNode.Value, Mode=OneWay}"
                        FontFamily="Consolas"
                        FontSize="{Binding NodeViewOptions.FontSize}"
                        Background="#D5E7FE"
                        IsColoringEnabled="{Binding ElementName=HexColorToggle, Path=IsChecked}"
                        ShowAddressPane="{Binding ElementName=HexAddressToggle, Path=IsChecked}"
                        ShowAsciiPane="{Binding ElementName=AsciiToggle, Path=IsChecked}"/>
                </DockPanel>
                <Grid>
                    <Grid.Resources>
                        <ResourceDictionary>
                            <ResourceDictionary.MergedDictionaries>
                                <ResourceDictionary Source="/Views/TreeViewResources.xaml"/>
                            </ResourceDictionary.MergedDictionaries>
                        </ResourceDictionary>
                    </Grid.Resources>
                    <c:AsnTreeView ItemsSource="{Binding Tree}"
                                   SelectedItem="{Binding DataSource.SelectedNode, Mode=TwoWay}"
                                   AllowDrop="True"
                                   FontSize="{Binding NodeViewOptions.FontSize}"
                                   MaxTextLength="{Binding NodeViewOptions.MaxTreeTextLength}"
                                   DoubleClickCommand="{Binding TreeCommands.EditNodeCommand}"
                                   DoubleClickCommandParameter="{x:Static clr:NodeEditMode.Text}"
                                   PreviewMouseDown="asnTreeViewPreviewMouseDown"
                                   FileDropCommand="{Binding DataContext.DropFileCommand, RelativeSource={RelativeSource AncestorType=Window}}"
                                   ItemTemplate="{StaticResource AsnTreeViewDataTemplate}"
                                   ItemContainerStyle="{StaticResource AsnTreeViewItemStyle}">
                        <c:AsnTreeView.InputBindings>
                            <KeyBinding Modifiers="Ctrl" Key="E" Command="{Binding TreeCommands.EditNodeCommand}" CommandParameter="{x:Static clr:NodeEditMode.Text}"/>
                            <KeyBinding Modifiers="Ctrl" Key="N" Command="{Binding TreeCommands.AddNewNodeCommand}"/>
                            <KeyBinding Modifiers="Ctrl" Key="X" Command="{Binding TreeCommands.CutNodeCommand}"/>
                            <KeyBinding Modifiers="Ctrl" Key="C" Command="{Binding TreeCommands.CopyNodeCommand}"/>
                            <KeyBinding Modifiers="Ctrl" Key="V" Command="{Binding TreeCommands.PasteAfterCommand}"/>
                            <KeyBinding Key="Delete" Command="{Binding TreeCommands.DeleteNodeCommand}"/>
                        </c:AsnTreeView.InputBindings>
                        <c:AsnTreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Edit node..."
                              Command="{Binding TreeCommands.EditNodeCommand}"
                              CommandParameter="{x:Static clr:NodeEditMode.Text}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/edit_16x16.png" Width="16"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Save selected node as..."
                              Command="{Binding TreeCommands.SaveNodeCommand}"/>
                                <MenuItem Header="View node text..."
                              Command="{Binding TreeCommands.ShowNodeTextViewer}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/viewtext_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="View encoded node..."
                              Command="{Binding TreeCommands.ShowNodeInConverter}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/converter_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Edit Object Identifier mapping"
                              Command="{Binding TreeCommands.RegisterOidCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/book_16x16.png"/>
                                    </MenuItem.Icon>
                                    <MenuItem.Style>
                                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding DataSource.SelectedNode.Value.Tag}" Value="6">
                                                    <Setter Property="Visibility" Value="Visible"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </MenuItem.Style>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="New node"
                              Command="{Binding TreeCommands.AddNewNodeCommand}"
                              InputGestureText="Ctrl + N">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/newnode_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Cut"
                              Command="{Binding TreeCommands.CutNodeCommand}"
                              InputGestureText="Ctrl + X">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/cut_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Copy"
                              Command="{Binding TreeCommands.CopyNodeCommand}"
                              InputGestureText="Ctrl + C">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/copy_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Paste before"
                              Command="{Binding TreeCommands.PasteBeforeCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/insertbefore_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Paste After"
                              Command="{Binding TreeCommands.PasteAfterCommand}"
                              InputGestureText="Ctrl + V">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/insertafter_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Insert as a last child node"
                              Command="{Binding TreeCommands.PasteLastCommand}">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/insertlast_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Remove"
                              Command="{Binding TreeCommands.DeleteNodeCommand}"
                              InputGestureText="Del">
                                    <MenuItem.Icon>
                                        <Image Source="/Views/Images/Menu/delete_16x16.png"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </c:AsnTreeView.ContextMenu>
                    </c:AsnTreeView>
                    <c:BusyIndicator IsShown="{Binding IsBusy}"
                         HeaderText="{Binding ProgressText}"
                         Text="This may take a while"/>
                </Grid>
            </DockPanel>
        </DataTemplate>
        <Style x:Key="LeftTabControlStyle" TargetType="TabControl">
            <Setter Property="Grid.ColumnSpan" Value="1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsSplitView}" Value="False">
                    <Setter Property="Grid.ColumnSpan" Value="3"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <DockPanel>
        <Menu DockPanel.Dock="Top">
            <MenuItem Header="_File">
                <MenuItem Header="_New" Command="{Binding NewCommand}" InputGestureText="Ctrl + N">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/new_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Open" Command="{Binding OpenCommand}" InputGestureText="Ctrl + O">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/open_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="_Save" Command="{Binding SaveCommand}" InputGestureText="Ctrl + S">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/save_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save A_ll" Command="{Binding SaveCommand}" InputGestureText="Ctrl + Shift + S">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/saveall_16x16.png" Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save _As..." Command="{Binding SaveCommand}" CommandParameter="1"/>
                <Separator/>
                <MenuItem Header="_Exit" Click="onCloseClick" InputGestureText="Alt + F4"/>
            </MenuItem>
            <MenuItem Header="_View">
                <MenuItem Header="Show node offset"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowNodeOffset}"/>
                <MenuItem Header="Show node length"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowNodeLength}"/>
                <MenuItem Header="Show tag number"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowTagNumber}"/>
                <MenuItem Header="Show node path"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowNodePath}"/>
                <MenuItem Header="Show in hex"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowInHex}"/>
                <Separator/>
                <MenuItem Header="Decode Integer as integer"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.IntegerAsInteger}"/>
                <MenuItem Header="Show content"
                          IsCheckable="True"
                          IsChecked="{Binding NodeViewOptions.ShowContent}"/>
            </MenuItem>
            <MenuItem Header="_Edit">
                <MenuItem Header="Edit node..."
                          Command="{Binding TreeCommands.EditNodeCommand}"
                          CommandParameter="{x:Static clr:NodeEditMode.Text}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/edit_16x16.png" Width="16"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Save selected node as..."
                          Command="{Binding TreeCommands.SaveNodeCommand}"/>
                <MenuItem Header="View node text"
                          Command="{Binding TreeCommands.ShowNodeTextViewer}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/viewtext_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="View encoded node..."
                          Command="{Binding TreeCommands.ShowNodeInConverter}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/converter_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Edit Object Identifier mapping"
                          Command="{Binding TreeCommands.RegisterOidCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/book_16x16.png"/>
                    </MenuItem.Icon>
                    <MenuItem.Style>
                        <Style TargetType="MenuItem" BasedOn="{StaticResource {x:Type MenuItem}}">
                            <Setter Property="Visibility" Value="Collapsed"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding SelectedTab.DataSource.SelectedNode.Value.Tag}" Value="6">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </MenuItem.Style>
                </MenuItem>
                <Separator/>
                <MenuItem Header="New node"
                          Command="{Binding TreeCommands.AddNewNodeCommand}"
                          InputGestureText="Ctrl + N">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/newnode_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Cut"
                          Command="{Binding TreeCommands.CutNodeCommand}"
                          InputGestureText="Ctrl + X">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/cut_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Copy"
                          Command="{Binding TreeCommands.CopyNodeCommand}"
                          InputGestureText="Ctrl + C">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/copy_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste before"
                          Command="{Binding TreeCommands.PasteBeforeCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/insertbefore_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Paste After"
                          Command="{Binding TreeCommands.PasteAfterCommand}"
                          InputGestureText="Ctrl + V">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/insertafter_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="Insert as a last child node"
                          Command="{Binding TreeCommands.PasteLastCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/insertlast_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <Separator/>
                <MenuItem Header="Remove"
                          Command="{Binding TreeCommands.DeleteNodeCommand}"
                          InputGestureText="Del">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/delete_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>
            <!--<MenuItem Header="_Tools">
                <MenuItem Header="Settings" Command="{Binding AppCommands.ShowSettingsCommand}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/info_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
            </MenuItem>-->
            <MenuItem Header="_Help">
                <MenuItem Header="About" Command="{Binding AppCommands.ShowAboutCommand, Mode=OneTime}">
                    <MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/info_16x16.png"/>
                    </MenuItem.Icon>
                </MenuItem>
                <MenuItem Header="License" Command="{Binding AppCommands.ShowLicenseCommand, Mode=OneTime}">
                    <!--<MenuItem.Icon>
                        <Image Source="/Views/Images/Menu/info_16x16.png"/>
                    </MenuItem.Icon>-->
                </MenuItem>
            </MenuItem>
        </Menu>
        <ToolBarTray DockPanel.Dock="Top" IsLocked="True">
            <ToolBar>
                <ToggleButton x:Name="HexViewerToggle"
                              IsChecked="{Binding NodeViewOptions.ShowHexViewer}"
                              ToolTip="Show or hide hex viewer">
                    <Image Source="/Views/Images/Menu/hexview_16x16.png" Width="16"/>
                </ToggleButton>
                <Button Command="{Binding AppCommands.ShowConverterWindow, Mode=OneTime}" ToolTip="Open data converter">
                    <Image Source="/Views/Images/Menu/converter_16x16.png"/>
                </Button>
                <Button Command="{Binding AppCommands.ShowOidEditor, Mode=OneTime}" ToolTip="Open Object Identifier mapping editor">
                    <Image Source="/Views/Images/Menu/book_16x16.png"/>
                </Button>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding NewCommand}" ToolTip="New file">
                    <Image Source="/Views/Images/Menu/new_16x16.png"/>
                </Button>
                <Button Command="{Binding OpenCommand}" ToolTip="Open file">
                    <Image Source="/Views/Images/Menu/open_16x16.png"/>
                </Button>
                <Button Command="{Binding SaveCommand}" ToolTip="Save file">
                    <Image Source="/Views/Images/Menu/save_16x16.png"/>
                </Button>
                <Button Command="{Binding SaveCommand}" ToolTip="Save all files"
                        CommandParameter="2">
                    <Image Source="/Views/Images/Menu/saveall_16x16.png" Width="16"/>
                </Button>
            </ToolBar>
            <ToolBar>
                <Button Command="{Binding TreeCommands.EditNodeCommand}"
                        CommandParameter="{x:Static clr:NodeEditMode.Text}"
                        ToolTip="Edit selected node">
                    <Image Source="/Views/Images/Menu/edit_16x16.png" Width="16"/>
                </Button>
                <Button Command="{Binding TreeCommands.ShowNodeTextViewer}"
                        ToolTip="View node text">
                    <Image Source="/Views/Images/Menu/viewtext_16x16.png"/>
                </Button>
                <Separator/>
                <Button Command="{Binding TreeCommands.CutNodeCommand}"
                        ToolTip="Cut selected node">
                    <Image Source="/Views/Images/Menu/cut_16x16.png"/>
                </Button>
                <Button Command="{Binding TreeCommands.CopyNodeCommand}"
                        ToolTip="Copy selected node">
                    <Image Source="/Views/Images/Menu/copy_16x16.png"/>
                </Button>
                <Button Command="{Binding TreeCommands.PasteBeforeCommand}"
                        ToolTip="Insert before selected node">
                    <Image Source="/Views/Images/Menu/insertbefore_16x16.png"/>
                </Button>
                <Button Command="{Binding TreeCommands.PasteAfterCommand}"
                        ToolTip="Insert after selected node">
                    <Image Source="/Views/Images/Menu/insertafter_16x16.png"/>
                </Button>
                <Button Command="{Binding TreeCommands.PasteLastCommand}"
                        ToolTip="Insert as a last child node">
                    <Image Source="/Views/Images/Menu/insertlast_16x16.png"/>
                </Button>
                <Separator/>
                <Button Command="{Binding TreeCommands.AddNewNodeCommand}"
                        ToolTip="New node">
                    <Image Source="/Views/Images/Menu/newnode_16x16.png"/>
                </Button>
                <Button Command="{Binding TreeCommands.DeleteNodeCommand}"
                        ToolTip="Delete selected node">
                    <Image Source="/Views/Images/Menu/delete_16x16.png"/>
                </Button>
            </ToolBar>
            <ToolBar>
                <TextBlock Text="Font size:"
                           Foreground="{StaticResource TabItem.FgBrush}"
                           Margin="2,0"
                           VerticalAlignment="Center"/>
                <ComboBox SelectedValue="{Binding NodeViewOptions.FontSize}">
                    <system:Int32>10</system:Int32>
                    <system:Int32>11</system:Int32>
                    <system:Int32>12</system:Int32>
                    <system:Int32>13</system:Int32>
                    <system:Int32>14</system:Int32>
                    <system:Int32>15</system:Int32>
                    <system:Int32>16</system:Int32>
                </ComboBox>
            </ToolBar>
        </ToolBarTray>
        <StatusBar DockPanel.Dock="Bottom">
            <StatusBarItem>
                <TextBlock Text="Tag: ">
                    <Run Text="{Binding SelectedTab.DataSource.SelectedNode.Value.Tag, Mode=OneWay, StringFormat=0x{0:X2}}"/>
                    <Run Text="{Binding SelectedTab.DataSource.SelectedNode.Value.Tag, Mode=OneWay, StringFormat=(0)}"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="Tag name: ">
                    <Run Text="{Binding  SelectedTab.DataSource.SelectedNode.Value.TagName, Mode=OneWay}"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="Payload length: ">
                    <Run Text="{Binding  SelectedTab.DataSource.SelectedNode.Value.PayloadLength, Mode=OneWay}"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="Child nodes: ">
                    <Run Text="{Binding SelectedTab.DataSource.SelectedNode.Children.Count, Mode=OneWay}"/>
                </TextBlock>
            </StatusBarItem>
            <Separator/>
            <StatusBarItem>
                <TextBlock Text="Size: ">
                    <Run Text="{Binding SelectedTab.DataSource.RawData.Count, Mode=OneWay}"/>
                    <Run Text="bytes"/>
                </TextBlock>
            </StatusBarItem>
            <StatusBarItem HorizontalAlignment="Right">
                <TextBlock Text="Version: ">
                    <Run Text="{Binding GlobalData.AppVersion, Mode=OneTime}"/>
                </TextBlock>
            </StatusBarItem>
        </StatusBar>
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="{Binding SeparatorWidth}" />
                <ColumnDefinition Width="{Binding RightColumnWidth}" />
            </Grid.ColumnDefinitions>
            <Border Grid.Column="0" Background="LightBlue">
                <TabControl ItemsSource="{Binding LeftTabsView}"
                            SelectedItem="{Binding SelectedLeftTab}"
                            BorderThickness="0"
                            Style="{StaticResource LeftTabControlStyle}"
                            SelectionChanged="onLeftTabSelectionChanged"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                    <TabControl.ItemTemplate>
                        <StaticResource ResourceKey="AsnTabHeaderTemplate"/>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <StaticResource ResourceKey="AsnTabContentTemplate"/>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Border>
            <GridSplitter Grid.Column="1"
                  Width="5"
                  Background="DarkGray"
                  HorizontalAlignment="Stretch"
                  VerticalAlignment="Stretch"
                  ShowsPreview="True"
                  Visibility="{Binding IsSplitView, Converter={StaticResource BooleanToVisibility}}"
                  ResizeBehavior="PreviousAndNext" />
            <Border 
                Grid.Column="2" 
                Background="LightGreen" 
                Visibility="{Binding IsSplitView, Converter={StaticResource BooleanToVisibility}}">
                <TabControl ItemsSource="{Binding RightTabsView}"
                            SelectedItem="{Binding SelectedRightTab}"
                            SelectionChanged="onLeftTabSelectionChanged"
                            BorderThickness="0"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch">
                    <TabControl.ItemTemplate>
                        <StaticResource ResourceKey="AsnTabHeaderTemplate"/>
                    </TabControl.ItemTemplate>
                    <TabControl.ContentTemplate>
                        <StaticResource ResourceKey="AsnTabContentTemplate"/>
                    </TabControl.ContentTemplate>
                </TabControl>
            </Border>
        </Grid>
    </DockPanel>
</Window>
